{"version":3,"sources":["components/block/Block.jsx","components/BlockItems/BlockItems.jsx","App.js","reportWebVitals.js","index.js"],"names":["Block","item","selectBranch","isSelected","className","classnames","type","title","onClick","BlockItems","items","addNewOperation","disabled","map","id","App","useState","blockItems","setBlockItems","counter","setCounter","isAnswer","setIsAnswer","setIsSelected","useEffect","phrases","length","prev","answer","actWatermelon","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bd7264b5.chunk.js","sourcesContent":["import React from 'react'\nimport './Block.scss';\nimport classnames from 'classnames';\n\nconst Block = ({ item, selectBranch, isSelected }) => {\n  return (\n    <>\n    <div className={classnames(\"block\", {\n      \"start-end\": item.type === \"start-end\",\n      \"condition\": item.type === \"condition\",\n      \"answer_one\": item.type === \"answer_one\",\n      \"answer_two\": item.type === \"answer_two\",\n      \"normal\": item.type === \"normal\",\n    })}>\n      {\n        (item.type === \"answer_two\" || item.type === \"answer_one\") && \n        <div className=\"lines\">\n          <span className=\"line\"></span>\n          <span className=\"hor_line\"></span>\n          <span className=\"line_down\"></span>\n        </div>\n      }\n      <p className={item.type === \"condition\" ? \"text_abs\" : \"\" }>{item.title}</p>\n    </div>\n    {\n      item.type === \"condition\"\n      &&\n      <div className=\"condition_answer\">\n        {\n          (!isSelected) && <>\n            <button className=\"btn\" onClick={() => selectBranch(true)}>Да</button>\n            <button className=\"btn\" onClick={() => selectBranch(false)}>Нет</button>\n          </>\n        }\n      </div>\n    }\n    {\n      item.type !== \"condition\" && item.type !== \"answer_one\" && item.type !== \"answer_two\" ? \n      <div className=\"arrow\"></div>\n      : <div className=\"border\"></div>\n    }\n    </>\n  )\n}\n\nexport default Block;\n","import React from 'react'\nimport './BlockItems.scss';\n\nimport Block from '../block/Block';\n\nconst BlockItems = ({ isSelected, items, addNewOperation, disabled, selectBranch }) => {\n  return (\n    <div className=\"block_items\">\n      <button disabled={disabled} onClick={addNewOperation} className=\"btn\">+</button>\n      {\n        items.map((item) => {\n          return <Block isSelected={isSelected} key={item.id} selectBranch={selectBranch} item={item} />\n        })\n      }\n    </div>\n  )\n}\n\nexport default BlockItems;\n","import BlockItems from './components/BlockItems/BlockItems';\nimport { useState, useEffect } from 'react';\n\nfunction App()\n{\n  const [ blockItems, setBlockItems ] = useState([]);\n  const [ counter, setCounter ] = useState(0);\n  const [ isAnswer, setIsAnswer ] = useState(false);\n  const [ isSelected, setIsSelected ] = useState(false);\n\n  useEffect(() => {\n    if (counter === 3) {\n      setIsAnswer(true);\n    }\n  }, [counter])\n\n  const [ phrases ] = useState(\n    [\n      {\n        id: 1,\n        title: \"Начало\",\n        type: \"start-end\",\n      },\n      {\n        id: 2,\n        title: \"Бросить арбуз в воду\",\n        type: \"normal\",\n      },\n      {\n        id: 3,\n        title: \"Арбуз всплыл?\",\n        type: \"condition\",\n      },\n      {\n        id: 4,\n        title: \"Достать арбуз из воды\",\n        type: \"normal\",\n      },\n      {\n        id: 5,\n        title: \"Конец\",\n        type: \"start-end\",\n      }\n    ]\n  );\n\n  const addNewOperation = () => {\n    setCounter(prev => prev + 1);\n    setBlockItems([...blockItems, phrases[counter]])\n  }\n\n  const selectBranch = (answer) => {\n    const actWatermelon = {\n      id: !answer ? 6 : 7,\n      title: !answer ? \"Он спелый\" : \"Он не спелый\",\n      type: !answer ? \"answer_one\" : \"answer_two\",\n    }\n    setBlockItems([...blockItems, actWatermelon ]);\n    setIsAnswer(false);\n    setIsSelected(true);\n  };\n\n  return (\n    <div className=\"App\">\n      <BlockItems\n        disabled={counter === phrases.length || isAnswer}\n        isSelected={isSelected}\n        addNewOperation={addNewOperation}\n        items={blockItems}\n        selectBranch={selectBranch}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}